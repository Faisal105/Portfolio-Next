@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 240 30% 98%;
  --foreground: 240 25% 8%;
  --card: 0 0% 100%;
  --card-foreground: 240 25% 8%;
  --popover: 0 0% 100%;
  --popover-foreground: 240 25% 8%;
  --primary: 280 100% 65%;
  --primary-foreground: 0 0% 100%;
  --secondary: 195 100% 55%;
  --secondary-foreground: 0 0% 100%;
  --muted: 240 25% 96%;
  --muted-foreground: 240 25% 35%;
  --accent: 320 100% 70%;
  --accent-foreground: 0 0% 100%;
  --destructive: 0 90% 60%;
  --destructive-foreground: 0 0% 100%;
  --border: 240 25% 92%;
  --input: 240 25% 92%;
  --ring: 280 100% 65%;
  --radius: 0.75rem;
}

html,
body {
  overflow-x: hidden;
}

.dark {
  --background: 240 30% 4%;
  --foreground: 0 0% 98%;
  --card: 240 25% 6%;
  --card-foreground: 0 0% 98%;
  --popover: 240 25% 6%;
  --popover-foreground: 0 0% 98%;
  --primary: 280 100% 70%;
  --primary-foreground: 0 0% 100%;
  --secondary: 195 100% 60%;
  --secondary-foreground: 0 0% 100%;
  --muted: 240 25% 12%;
  --muted-foreground: 240 25% 75%;
  --accent: 320 100% 75%;
  --accent-foreground: 0 0% 100%;
  --destructive: 0 90% 60%;
  --destructive-foreground: 0 0% 100%;
  --border: 240 25% 18%;
  --input: 240 25% 18%;
  --ring: 280 100% 70%;
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground relative;
  }

  /* Rich background gradients */
  body::before {
    content: "";
    position: fixed;
    inset: 0;
    background:
      radial-gradient(
        circle at 0% 0%,
        hsl(var(--primary) / 0.15),
        transparent 40%
      ),
      radial-gradient(
        circle at 100% 0%,
        hsl(var(--secondary) / 0.15),
        transparent 40%
      ),
      radial-gradient(
        circle at 100% 100%,
        hsl(var(--accent) / 0.15),
        transparent 40%
      ),
      radial-gradient(
        circle at 0% 100%,
        hsl(280 95% 60% / 0.15),
        transparent 40%
      );
    z-index: -1;
    pointer-events: none;
  }

  .dark body::before {
    background:
      radial-gradient(
        circle at 0% 0%,
        hsl(var(--primary) / 0.2),
        transparent 40%
      ),
      radial-gradient(
        circle at 100% 0%,
        hsl(var(--secondary) / 0.2),
        transparent 40%
      ),
      radial-gradient(
        circle at 100% 100%,
        hsl(var(--accent) / 0.2),
        transparent 40%
      ),
      radial-gradient(
        circle at 0% 100%,
        hsl(280 95% 60% / 0.2),
        transparent 40%
      );
  }
}

/* Enhanced gradient animations */
@property --gradient-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.gradient-border {
  background: linear-gradient(
    var(--gradient-angle),
    hsl(var(--primary)),
    hsl(var(--secondary)),
    hsl(var(--accent)),
    hsl(var(--primary))
  );
  animation: gradient-rotate 5s linear infinite;
}

/* Animated background mesh */
.mesh-gradient {
  background-color: hsla(var(--background));
  background-image:
    radial-gradient(
      at 40% 20%,
      hsla(var(--primary) / 0.1) 0px,
      transparent 50%
    ),
    radial-gradient(
      at 80% 0%,
      hsla(var(--secondary) / 0.1) 0px,
      transparent 50%
    ),
    radial-gradient(at 0% 50%, hsla(var(--accent) / 0.1) 0px, transparent 50%),
    radial-gradient(at 80% 50%, hsla(280 95% 60% / 0.1) 0px, transparent 50%),
    radial-gradient(
      at 0% 100%,
      hsla(var(--primary) / 0.1) 0px,
      transparent 50%
    ),
    radial-gradient(
      at 80% 100%,
      hsla(var(--secondary) / 0.1) 0px,
      transparent 50%
    ),
    radial-gradient(at 0% 0%, hsla(var(--accent) / 0.1) 0px, transparent 50%);
}

.dark .mesh-gradient {
  background-image:
    radial-gradient(
      at 40% 20%,
      hsla(var(--primary) / 0.2) 0px,
      transparent 50%
    ),
    radial-gradient(
      at 80% 0%,
      hsla(var(--secondary) / 0.2) 0px,
      transparent 50%
    ),
    radial-gradient(at 0% 50%, hsla(var(--accent) / 0.2) 0px, transparent 50%),
    radial-gradient(at 80% 50%, hsla(280 95% 60% / 0.2) 0px, transparent 50%),
    radial-gradient(
      at 0% 100%,
      hsla(var(--primary) / 0.2) 0px,
      transparent 50%
    ),
    radial-gradient(
      at 80% 100%,
      hsla(var(--secondary) / 0.2) 0px,
      transparent 50%
    ),
    radial-gradient(at 0% 0%, hsla(var(--accent) / 0.2) 0px, transparent 50%);
}

@keyframes gradient-rotate {
  0% {
    --gradient-angle: 0deg;
  }
  100% {
    --gradient-angle: 360deg;
  }
}

.skills-carousel {
  animation: scroll 30s linear infinite;
}

.skills-carousel:hover {
  animation-play-state: paused;
}

@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

/* Enhanced utility classes */
.text-shadow {
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.glass {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.dark .glass {
  background: rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.glow {
  box-shadow: 0 0 20px rgba(var(--primary), 0.3);
}

.glow-hover:hover {
  box-shadow: 0 0 30px rgba(var(--primary), 0.4);
}

/* Floating animation */
@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

/* Pulse glow */
@keyframes pulse-glow {
  0%,
  100% {
    box-shadow: 0 0 5px rgba(var(--primary), 0.3);
  }
  50% {
    box-shadow: 0 0 20px rgba(var(--primary), 0.6);
  }
}

.animate-pulse-glow {
  animation: pulse-glow 2s ease-in-out infinite;
}

/* Enhanced typing animation */
@keyframes blink {
  0%,
  50% {
    opacity: 1;
  }
  51%,
  100% {
    opacity: 0;
  }
}

.animate-blink {
  animation: blink 1s infinite;
}
